@inject IJSRuntime JS

<MudCard>
    <MudCardHeader>
        <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="2">
            <MudTextField 
                @bind-Value="_searchText" 
                Placeholder="Nhập mã mới hoặc cũ; tên tỉnh/thành phố hoặc xã/phường để tìm ..."
                Label="Tìm tỉnh/thành phố" 
                Variant="Variant.Outlined" 
                Adornment="Adornment.Start" 
                AdornmentIcon="@Icons.Material.Filled.Search" 
                OnKeyUp="@HandleKeyUp"/>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@SearchProvince">Tìm</MudButton>
        </MudStack>

    </MudCardHeader>
    <MudCardContent>
        <div id="@_mapDivId" style="height:620px; width:100%;"></div>
    </MudCardContent>
</MudCard>

@code {
    private readonly string _mapDivId = $"map_{Guid.NewGuid():N}";
    private bool _initialized;
    private string _searchText = string.Empty;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !_initialized)
        {
            // gọi hàm global đã được nạp qua <script src="/js/osmMap.js">
            await JS.InvokeVoidAsync("initMapAndLoadData", "/api/v1/provinces", _mapDivId);
            _initialized = true;
        }
    }
    
    private async Task SearchProvince()
    {
        if (string.IsNullOrWhiteSpace(_searchText) && !_initialized)
            return;

        await JS.InvokeVoidAsync("highlightProvince",  _searchText.Trim(), _mapDivId);
    }

    private async Task HandleKeyUp(KeyboardEventArgs e)
    {
        // Khi người dùng nhấn Enter thì thực hiện hành động tìm kiếm
        if (e.Key == "Enter")
        {
            await SearchProvince();
        }
    }

    public async ValueTask DisposeAsync()
    {
        try
        {
            await JS.InvokeVoidAsync("disposeMap", _mapDivId);
        }
        catch (JSDisconnectedException) { /* circuit đã đóng => safe ignore */ }
        catch (JSException) { /* log nếu cần */ }
    }
}